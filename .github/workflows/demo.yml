# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
env:
  PATH_BUILD_SERVER: ./apps/server/dist
  PATH_BUILD_FRONT: ./apps/front/dist
  CACHE_PATHS_BUILD: |
    node_modules/.cache/turbo
    ./apps/front/dist
    ./apps/server/dist
    ./output
  CACHE_KEY_BUILD:
    build-${{ github.sha }}
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo ::set-output name=STORE_PATH::$(pnpm store path)
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Setup turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATHS_BUILD }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            turbo-${{ runner.os }}-
      - name: Install dependencies
        run: pnpm install
        
      - name: Build
        run: pnpm build
      - name: Deploy Page
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: ./apps/front/dist
      - name: zip dist
        shell: bash
        run: rm -rf ./output && mkdir ./output && mv ./apps/front/dist ./output/front && mv ./apps/server/dist ./output/server && mv ./package.json ./output/package.json
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./output

  publish-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATHS_BUILD }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            turbo-${{ runner.os }}-
      - name: version
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./output/package.json
          property: version
      - name: create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:

          tag_name: v${{steps.version.outputs.value}}
          # release名
          release_name: v${{steps.version.outputs.value}}
          # 是否为草稿
          draft: false
          # 是否为预发布
          prerelease: false
      - name: upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # 上传文件信息
          asset_path: ./dist/index.js
          asset_name: index.js
          asset_content_type: application/js
